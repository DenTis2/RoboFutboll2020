//#include <Servo.h>
#include <String.h>
#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>
#include <MeAuriga.h>
#define AURIGARINGLEDNUM  12
#define RINGALLLEDS        0
//Servo servo1;
String inputString = "";
int y;
int angel;
int gyro;
int lastgyro;
int trigPin = 60; // назначаем имя для Pin8
int echoPin = 65; // назначаем имя для Pin9
MeGyro gyro_0(0, 0x69);
MeLightSensor lightsensor_12(12);
MeEncoderOnBoard Encoder_1(SLOT1);
MeEncoderOnBoard Encoder_2(SLOT2);
//MeSmartServo Servo1(9);
MeColorSensor colorsensor_7(7);
MeUltrasonicSensor ultrasonic_10(10);
MeUltrasonicSensor ultrasonic_9(9);
//MeLightSensor lightsensor_12(12);

Servo servo1;
#ifdef MeAuriga_H
// on-board LED ring, at PORT0 (onboard), with 12 LEDs
MeRGBLed led_ring( 0, 12 );
#endif

void controlLight(MeColorSensor colorSensor, uint8_t lightState){
  if(lightState == 0){
    colorSensor.TurnOffLight();
  }else{
    colorSensor.TurnOnLight();
  }
}

uint8_t detectedColor(MeColorSensor colorSensor, uint8_t colorType){
  if(colorType == colorSensor.Returnresult()){
    return 1;
  }
  return 0;
}

void isr_process_encoder1(void)
{
  if(digitalRead(Encoder_1.getPortB()) == 0){
    Encoder_1.pulsePosMinus();
  }else{
    Encoder_1.pulsePosPlus();
  }
}
void isr_process_encoder2(void)
{
  if(digitalRead(Encoder_2.getPortB()) == 0){
    Encoder_2.pulsePosMinus();
  }else{
    Encoder_2.pulsePosPlus();
  }
}
void move(int direction, int speed)
{
  int leftSpeed = 0;
  int rightSpeed = 0;
  if(direction == 1){
    leftSpeed = -speed;
    rightSpeed = speed;
  }else if(direction == 2){
    leftSpeed = speed;
    rightSpeed = -speed;
  }else if(direction == 3){
    leftSpeed = -speed;
    rightSpeed = -speed;
  }else if(direction == 4){
    leftSpeed = speed;
    rightSpeed = speed;
  }
  Encoder_1.setTarPWM(leftSpeed);
  Encoder_2.setTarPWM(rightSpeed);
}

void _delay(float seconds) {
  if(seconds < 0.0){
    seconds = 0.0;
  }
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  servo1.attach(9);
  servo1.write(168);
  delay(2000);
  //Servo1.move(180,200,NULL);
  Wire.begin();
  Serial.begin (9600); 
  //inputString.reserve(200);
  gyro_0.begin();
  #ifdef MeAuriga_H
    // 12 LED Ring controller is on Auriga D44/PWM
    led_ring.setpin( 44 );
  #endif

  uint16_t result;
  float temp;
  pinMode(trigPin, OUTPUT); // назначаем trigPin (Pin8), как выход
  pinMode(echoPin, INPUT); // назначаем echoPin (Pin9), как вход
  TCCR1A = _BV(WGM10);
  TCCR1B = _BV(CS11) | _BV(WGM12);
  TCCR2A = _BV(WGM21) | _BV(WGM20);
  TCCR2B = _BV(CS21);
  attachInterrupt(Encoder_1.getIntNum(), isr_process_encoder1, RISING);
  attachInterrupt(Encoder_2.getIntNum(), isr_process_encoder2, RISING);
  randomSeed((unsigned long)(lightsensor_12.read() * 123456));
  delay(2000);
 //int u = analogRead(A10);
   Encoder_1.setTarPWM(0);
   Encoder_2.setTarPWM(0);
   _delay(0.5);       
   Encoder_1.setTarPWM(100/100.0*255);
   Encoder_2.setTarPWM(-100/100.0*255);
   _delay(0.25);           
   Encoder_1.setTarPWM(0);
   Encoder_2.setTarPWM(0);
   _delay(0.5);       
  while(1) {
    int w = analogRead(A10);
    //Serial.println (w);
    /*if(abs(w - u >=15)){
     u = w;
    }
    else if( abs (w - u) >= 5 ){
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);
    _delay(0.5);       
    Encoder_1.setTarPWM(-100/100.0*255);
    Encoder_2.setTarPWM(100/100.0*255);
    _delay(0.5);           
     Encoder_1.setTarPWM(0);
     Encoder_2.setTarPWM(0);
     move(3, 80 / 100.0 * 255);
     _delay(1.25);
     move(3, 0);
     Encoder_1.setTarPWM(-1 * -75/100.0*255);
     Encoder_2.setTarPWM(-75/100.0*255);
     _delay(1);
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);  
    _delay(0.5);      
    }*/
    if(w > 275){
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);
    _delay(0.5);       
    Encoder_1.setTarPWM(-100/100.0*255);
    Encoder_2.setTarPWM(100/100.0*255);
    _delay(0.5);           
     Encoder_1.setTarPWM(0);
     Encoder_2.setTarPWM(0);
     move(3, 75 / 100.0 * 255);
     _delay(0.75);
     move(3, 0);
     Encoder_1.setTarPWM(-1 * -75/100.0*255);
     Encoder_2.setTarPWM(-75/100.0*255);
     _delay(0.5);
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);  
    _delay(0.5);      
    }
    int t = -50;
    int y = -50;
    int duration, cm; // назначаем переменную "cm" и "duration" для показаний датчика
    digitalWrite(trigPin,LOW); // изначально датчик не посылает сигнал
    delayMicroseconds(2); // ставим задержку в 2 ммикросекунд

    digitalWrite(trigPin, HIGH); // посылаем сигнал
    delayMicroseconds(10); // ставим задержку в 10 микросекунд
    digitalWrite(trigPin, LOW); // выключаем сигнал

    duration = pulseIn(echoPin, HIGH,30000); // включаем прием сигнала

    cm = duration / 58; // вычисляем расстояние в сантиметрах

    Serial.print(cm); // выводим расстояние в сантиметрах
    Serial.println(" cm");         
    t = t - (10 - cm); 
    y = y + (10 - cm);
    Encoder_1.setTarPWM(-1 * t/100.0*255);
    Encoder_2.setTarPWM(y/100.0*255);
    delay(100);
    int i;   
    Wire.beginTransmission(0x5A);
    Wire.write(0x07);            // sends instruction byte
    Wire.endTransmission(false);     // stop transmitting
    Wire.requestFrom(0x5A, 3);//Send data n-bytes read
    result = Wire.read(); //Receive DATA
    result |= Wire.read() << 8; //Receive DATA
    uint8_t pec = Wire.read();
    temp = result * 0.02 - 273.15;
    Serial.println(temp);
     if(temp >= 29 && temp < 1000){
       Encoder_1.setTarPWM(0);
       Encoder_2.setTarPWM(0);
       _delay(0.5);
       /*Encoder_1.setTarPWM(-50/100.0*255);
       Encoder_2.setTarPWM(50/100.0*255);
       _delay(0.5);
       Encoder_1.setTarPWM(0);
       Encoder_2.setTarPWM(0);
       _delay(0.5);*/
       for(y = 1; y <= 10; y++){
        for ( i = 1; i <= AURIGARINGLEDNUM; i++ )
         {
      //    Serial.print(i);
          led_ring.setColor( i, 100, 0, 0);
          led_ring.show();
          delay( 50 );
         }
       led_ring.setColor( RINGALLLEDS, 0, 0, 0 );
       led_ring.show();
       }
       servo1.write(1);
       delay(2000);
       servo1.write(15);
       delay(200);
       servo1.write(1);
       delay(200);
       servo1.write(15);
       delay(200);
       servo1.write(1);
       delay(200);
       servo1.write(15);
       delay(200);
       servo1.write(1);
       delay(200);
       servo1.write(168);
       delay(2000); 
       Encoder_1.setTarPWM(50/100.0*255);
       Encoder_2.setTarPWM(-50/100.0*255);
       _delay(1);
       Encoder_1.setTarPWM(0);
       Encoder_2.setTarPWM(0);
       _delay(0.5);    
    }    
    digitalWrite(trigPin, HIGH); // посылаем сигнал
    delayMicroseconds(10); // ставим задержку в 10 микросекунд
    digitalWrite(trigPin, LOW); // выключаем сигнал

    duration = pulseIn(echoPin, HIGH,30000); // включаем прием сигнала

    cm = duration / 58; // вычисляем расстояние в сантиметрах

    Serial.print(cm); // выводим расстояние в сантиметрах
    Serial.println(" cm");      
    led_ring.setColor( RINGALLLEDS, 0, 0, 0 );
    led_ring.show(); 
    digitalWrite(trigPin,LOW); // изначально датчик не посылает сигнал
    delayMicroseconds(2); // ставим задержку в 2 ммикросекунд   
    delay(50);
    int ultra9 = ultrasonic_9.distanceCm();
    w = analogRead(A10);
    Serial.println (w);
/*    if(w -u >=40){
     w = u;
    }*/
    Wire.beginTransmission(0x5A);
    Wire.write(0x07);            // sends instruction byte
    Wire.endTransmission(false);     // stop transmitting
    Wire.requestFrom(0x5A, 3);//Send data n-bytes read
    result = Wire.read(); //Receive DATA
    result |= Wire.read() << 8; //Receive DATA
    temp = result * 0.02 - 273.15;
    Serial.println(temp);
     if(temp >= 29 && temp < 1000){
       Encoder_1.setTarPWM(0);
       Encoder_2.setTarPWM(0);
       _delay(0.5);
       /*Encoder_1.setTarPWM(-50/100.0*255);
       Encoder_2.setTarPWM(50/100.0*255);
       _delay(0.2);
       Encoder_1.setTarPWM(0);
       Encoder_2.setTarPWM(0);
       _delay(0.5);*/
       for(y = 1; y <= 10; y++){
        for ( i = 1; i <= AURIGARINGLEDNUM; i++ )
         {
          Serial.print(i);
          led_ring.setColor( i, 100, 0, 0);
          led_ring.show();
          delay( 50 );
         }
       led_ring.setColor( RINGALLLEDS, 0, 0, 0 );
       led_ring.show();
       }
       servo1.write(1);
       delay(2000);
       servo1.write(15);
       delay(200);
       servo1.write(1);
       delay(200);
       servo1.write(15);
       delay(200);
       servo1.write(1);
       delay(200);
       servo1.write(15);
       delay(200);
       servo1.write(1);
       delay(200);
       servo1.write(168);
       delay(2000); 
       Encoder_1.setTarPWM(50/100.0*255);
       Encoder_2.setTarPWM(-50/100.0*255);
       _delay(1);
       Encoder_1.setTarPWM(0);
       Encoder_2.setTarPWM(0);
       _delay(0.5);    
    }
 /*   else if( w - u >= 5 ){
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);
    _delay(0.5);       
    Encoder_1.setTarPWM(-100/100.0*255);
    Encoder_2.setTarPWM(100/100.0*255);
    _delay(0.5);           
     Encoder_1.setTarPWM(0);
     Encoder_2.setTarPWM(0);
     move(3, 80 / 100.0 * 255);
     _delay(1.25);
     move(3, 0);
     Encoder_1.setTarPWM(-75/100.0*255);
     Encoder_2.setTarPWM(-75/100.0*255);
     _delay(1);
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);  
    _delay(0.5);   
    cm = 24.97684478;
    }
    else if(u - w >= 3){
     u= w;
    }*/
    if(w > 275){
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);
    _delay(0.5);       
    Encoder_1.setTarPWM(-50/100.0*255);
    Encoder_2.setTarPWM(50/100.0*255);
    _delay(0.5);           
     Encoder_1.setTarPWM(0);
     Encoder_2.setTarPWM(0);
     move(3, 75 / 100.0 * 255);
     _delay(0.75);
     move(3, 0);
     Encoder_1.setTarPWM(-1 * -50/100.0*255);
     Encoder_2.setTarPWM(-50/100.0*255);
     _delay(1);
    Encoder_1.setTarPWM(0);
    Encoder_2.setTarPWM(0);  
    _delay(0.5);      
    }    
    if(cm > 25){
     Encoder_1.setTarPWM(0);
     Encoder_2.setTarPWM(0);
     _delay(0.1);
     gyro_0.update();
     lastgyro = gyro_0.getAngle(3);
     gyro = lastgyro;
     angel = lastgyro - 45;
     if(angel < -180){
      while(gyro > -170){
      gyro_0.update();
      gyro = gyro_0.getAngle(3);
      rotate_left();
      _delay(0.05);
      }
      gyro_0.update();
      while(gyro > 180 + (angel + 180) || gyro > -180 && gyro < -170){
      gyro_0.update();
      gyro = gyro_0.getAngle(3);
      rotate_left();
      _delay(0.05);
      }
     }
     else{
      while(gyro > angel){
      gyro_0.update();
      gyro = gyro_0.getAngle(3);
      rotate_left();
      _delay(0.05);
      }
     }
    move(3,0);
    delay(100);
     Encoder_1.setTarPWM(-1 * -50/100.0*255);
     Encoder_2.setTarPWM(-50/100.0*255);
     _delay(1);    
    }
    else if(ultra9 < 15){
     Encoder_1.setTarPWM(0);
     Encoder_2.setTarPWM(0);
     _delay(0.1);
     gyro_0.update();
     lastgyro = gyro_0.getAngle(3);
     gyro = lastgyro;
     angel = lastgyro + 45;
     if(angel > 180){
      while(gyro < 170){
      gyro_0.update();
      gyro = gyro_0.getAngle(3);
      rotate_right();
      _delay(0.05);
      gyro_0.update();
      }
      while(gyro < -180 + (angel - 180) || gyro > 170 && gyro < 180){
       gyro_0.update();
       gyro = gyro_0.getAngle(3);
       rotate_right();
      _delay(0.05);
      }
     }
     else{
      while(gyro < angel){
      gyro_0.update();
      gyro = gyro_0.getAngle(3);
      rotate_right();
      _delay(0.05);
      }
     }
     move(4,0);
     delay(100);
     Encoder_1.setTarPWM(-1 * -50/100.0*255);
     Encoder_2.setTarPWM(-50/100.0*255);
     _delay(1); 
    }
      _loop();
  }
}
void rotate_left(){
 move(3, 75 / 100.0 *255);
}
void rotate_right(){
 move(4, 75 / 100.0 * 255);
}
void _loop() {
  Encoder_1.loop();
  Encoder_2.loop();
}

void loop() {
  _loop();
}











































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































