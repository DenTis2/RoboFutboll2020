
#include<String.h>
String inputString = "";         // a String to hold incoming data
bool stringComplete = false;  // whether the string is complete
int x=90;
int C = 11;
int A = 9;
void setup() {
  // initialize serial:
  Serial.begin(9600);
  // reserve 200 bytes for the inputString:
  inputString.reserve(200);
  pinMode(10,OUTPUT);
  pinMode(9,OUTPUT);
  pinMode(7,OUTPUT);
  pinMode(6,OUTPUT);
  pinMode(5,OUTPUT);
  pinMode(4,OUTPUT);
  pinMode(13,OUTPUT);
  delay(500);
}
 
void loop() {
  // print the string when a newline arrives:
  if (stringComplete) {
    char string = inputString.charAt(0);
    inputString.setCharAt(0,'0');
    if (string !='A' && string !='B') {
      string = inputString.charAt(1);
      inputString.setCharAt(1,'0');
    }
    Serial.println(string);
    Serial.println(inputString);    
    int speed = inputString.toInt();
    Serial.println(speed);      
    if(string == 'A'){
    digitalWrite(4,HIGH);
    digitalWrite(5,LOW);
    analogWrite(9,speed);
    }
    if(string == 'B'){
    digitalWrite(7,HIGH);
    digitalWrite(6,LOW);
    analogWrite(10,speed);
    }
    speed = inputString.toInt();
    //Serial.println(inputString);
    // clear the string:
    inputString = "";
    stringComplete = false;
    for (int i=0; i< string - '0';i++){
      digitalWrite(13, 1);
      delay(300);
      digitalWrite(13, 0);
      delay(300);
    }
    
  }
}
 
void serialEvent() {
  while (Serial.available()) {
    // get the new byte:
    char inChar = (char)Serial.read();
    // add it to the inputString:
    inputString += inChar;
    // if the incoming character is a newline, set a flag so the main loop can
    // do something about it:
    if (inChar == ' ') {
      stringComplete = true;
    }
  }
}
